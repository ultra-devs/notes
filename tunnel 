import socket
import threading

def handle_client(client_socket, y_host, y_port):
    y_client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    y_client.connect((y_host, y_port))

    while True:
        data = client_socket.recv(4096)
        if not data:
            break
        y_client.send(data)

        response = y_client.recv(4096)
        if not response:
            break
        client_socket.send(response)

    client_socket.close()
    y_client.close()

def start_tunnel(x_host, x_port, y_host, y_port):
    server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    server.bind((x_host, x_port))
    server.listen(5)
    print(f"[*] Listening on {x_host}:{x_port}")

    while True:
        client_socket, addr = server.accept()
        print(f"[*] Accepted connection from {addr[0]}:{addr[1]}")
        client_handler = threading.Thread(target=handle_client, args=(client_socket, y_host, y_port))
        client_handler.start()

if __name__ == "__main__":
    x_host = 'localhost'  # Change this to your host x IP
    x_port = 8070
    y_host = 'destination_host_y'  # Change this to your host y IP or domain name
    y_port = 8080

    start_tunnel(x_host, x_port, y_host, y_port)


import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.ServerSocket;
import java.net.Socket;

public class Tunnel {
    public static void main(String[] args) {
        String xHost = "localhost"; // Replace with your host x IP
        int xPort = 8070;
        String yHost = "destination_host_y"; // Replace with your host y IP or domain name
        int yPort = 8080;

        try {
            ServerSocket serverSocket = new ServerSocket(xPort);
            System.out.println("[*] Listening on " + xHost + ":" + xPort);

            while (true) {
                Socket clientSocket = serverSocket.accept();
                System.out.println("[*] Accepted connection from " + clientSocket.getInetAddress() + ":" + clientSocket.getPort());
                
                Socket yClientSocket = new Socket(yHost, yPort);

                Thread fromClientToY = new Thread(() -> {
                    try {
                        relayTraffic(clientSocket.getInputStream(), yClientSocket.getOutputStream());
                    } catch (IOException e) {
                        e.printStackTrace();
                    }
                });

                Thread fromYToClient = new Thread(() -> {
                    try {
                        relayTraffic(yClientSocket.getInputStream(), clientSocket.getOutputStream());
                    } catch (IOException e) {
                        e.printStackTrace();
                    }
                });

                fromClientToY.start();
                fromYToClient.start();
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private static void relayTraffic(InputStream in, OutputStream out) throws IOException {
        byte[] buffer = new byte[4096];
        int bytesRead;
        while ((bytesRead = in.read(buffer)) != -1) {
            out.write(buffer, 0, bytesRead);
            out.flush();
        }
    }
}